{"version":3,"sources":["api/users.js","api/todos.js","NewToDo/NewToDo.js","ToDoList/ToDoList.js","App.js","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","NewToDo","state","props","toDoId","user","invalidTitle","invalidUser","changeUser","event","setState","target","value","prevState","find","changeTextArea","taskStatus","complete","submitForm","preventDefault","length","addToDo","this","onSubmit","className","htmlFor","type","onChange","placeholder","ClassNames","form__invalidText","form__invalidUser","map","key","React","Component","ToDoList","toDos","callback","toDo","toDo__statusTrue","checked","newToDo","todo","App","changeCompleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6024fa07.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport './NewToDo.css';\n\nclass NewToDo extends React.Component {\n  state = {\n    userId: 1,\n    id: this.props.toDoId + 1,\n    title: '',\n    completed: false,\n    user: 'select user',\n    invalidTitle: false,\n    invalidUser: false,\n  };\n\n  changeUser = (event) => {\n    this.setState(\n      {\n        user: event.target.value,\n      },\n    );\n    this.setState(prevState => (\n      {\n        userId: this.props.users.find(\n          user => user.name === prevState.user,\n        ).id,\n      }\n    ));\n  };\n\n  changeTextArea = (event) => {\n    this.setState(\n      {\n        title: event.target.value,\n      },\n    );\n  };\n\n  taskStatus = (event) => {\n    this.setState(\n      {\n        complete: event.target.value,\n      },\n    );\n  };\n\n  submitForm = (event) => {\n    event.preventDefault();\n    if (this.state.title.length > 7) {\n      this.setState({ invalidTitle: false });\n      if (this.state.user !== 'select user') {\n        this.props.addToDo(\n          {\n            userId: this.state.userId,\n            id: this.state.id,\n            title: this.state.title,\n            completed: this.state.completed,\n            user: this.state.user,\n          },\n        );\n        this.setState(prevState => (\n          {\n            title: '',\n            id: prevState.id + 1,\n            invalidUser: false,\n          }\n        ));\n      } else {\n        this.setState({ invalidUser: true });\n      }\n    } else {\n      this.setState(\n        {\n          invalidTitle: true,\n        },\n      );\n    }\n  };\n\n  render() {\n    const { users } = this.props;\n    const { user, complete, title, invalidTitle, invalidUser } = this.state;\n\n    return (\n      <>\n        <h1>\n          New todo\n        </h1>\n        <form onSubmit={this.submitForm} className=\"form\">\n          <label htmlFor=\"text\" className=\"form__item\">\n            Enter task:\n            <input\n              type=\"text\"\n              onChange={this.changeTextArea}\n              id=\"text\"\n              value={title}\n              placeholder=\"enter task please\"\n              className={\n                ClassNames({ form__invalidText: invalidTitle })\n              }\n            />\n          </label>\n          <label htmlFor=\"user\" className=\"form__item\">\n            User:\n            <select\n              value={user}\n              onChange={this.changeUser}\n              id=\"user\"\n              className={\n                ClassNames({ form__invalidUser: invalidUser })\n              }\n            >\n              <option value=\"select user\">select user</option>\n              {users.map(user => (\n                <option key={user.id} value={user.name}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          <label htmlFor=\"status\" className=\"form__item\">\n            Task status:\n            <select\n              value={complete}\n              onChange={this.taskStatus}\n              id=\"status\"\n            >\n              <option value=\"true\">Done</option>\n              <option value=\"false\">Doing</option>\n            </select>\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewToDo.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.shape(\n    {\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    },\n  )).isRequired,\n  addToDo: PropTypes.func.isRequired,\n  toDoId: PropTypes.number.isRequired,\n};\n\nexport default NewToDo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './toDo.css';\nimport ClassNames from 'classnames';\n\nconst ToDoList = ({ toDos, callback }) => (\n  <div className=\"toDo\">\n    {toDos.map(toDo => (\n      <div key={toDo.id} className=\"toDo__item\">\n        <div>\n          {`Performer: ${toDo.user}`}\n        </div>\n        <p>{toDo.title}</p>\n        <label className={\n          ClassNames('toDo__status', { toDo__statusTrue: toDo.completed })\n        }\n        >\n          Task status:\n          <input\n            type=\"checkbox\"\n            checked={toDo.completed}\n            onChange={() => (callback(toDo.id))}\n          />\n        </label>\n      </div>\n    ))}\n  </div>\n);\n\nToDoList.propTypes = {\n  toDos: PropTypes.arrayOf(PropTypes.shape(\n    {\n      id: PropTypes.number.isRequired,\n      user: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    },\n  )).isRequired,\n  callback: PropTypes.func.isRequired,\n};\n\nexport default ToDoList;\n","import React from 'react';\nimport './App.css';\n\nimport users from './api/users';\nimport todos from './api/todos';\nimport NewToDo from './NewToDo/NewToDo';\nimport ToDoList from './ToDoList/ToDoList';\n\nconst newToDo = todos.map(todo => (\n  {\n    ...todo,\n    user: users.find(user => user.id === todo.userId).name,\n  }\n));\n\nclass App extends React.Component {\n  state= {\n    todos: [...newToDo],\n  };\n\n  addToDo =(todo) => {\n    this.setState(prevState => (\n      {\n        todos: [...prevState.todos, todo],\n      }\n    ));\n  };\n\n  changeCompleted = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => (\n        (todo.id === id)\n          ? {\n            ...todo,\n            completed: !todo.completed,\n          }\n          : todo\n      )),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <p>\n          <span>Users: </span>\n          {users.length}\n        </p>\n\n        <NewToDo\n          users={users}\n          addToDo={this.addToDo}\n          toDoId={this.state.todos[this.state.todos.length - 1].id}\n        />\n        <ToDoList toDos={this.state.todos} callback={this.changeCompleted} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}